htp.p('<html>
    <head>
        <style>

            table, th, td{
            border: 1px solid black;
            border-collapse: collapse;
            margin: 0px;
            }
            td {
                padding-left: 2px;
               
             }
        </style>

        </head>
        <body>
            <center><h2>My First Reports</h2></center>
            <table border="1" style= "font-size: 13px; width:100%; /*text-align: center; */border-collapse: collapse">
                <th>APEX_ID</th>
                <th>APEX_NAME</th>
                <th>APEX_DATE</th>
                <th>JAPEX_DESC</th>
                <th>APEX_VERSION</th>
                 <th>START_DATE</th>
                 <th>END_DATE</th>');
                 declare
                 cursor cur_name is 
                 select apex_id , apex_name, apex_date, apex_desc , apex_version , start_date,
                  end_date from oracleapex order by apex_id;
                  begin
                 for x in cur_name loop
                 htp.p('<tr>
                     <td>'|| x.apex_id ||'</td>
                     <td>'|| x.apex_name ||'</td>
                     <td>'|| x.apex_date ||'</td>
                     <td>'|| x.apex_desc ||'</td>
                     <td>'|| x.apex_version ||'</td>
                     <td>'|| x.start_date ||'</td>
                     <td>'|| x.end_date  ||'</td>  </tr>');
                 
              end loop;
              end;
                htp.p('</table>');
           htp.p('</body>');

    htp.p('</html>');
==========================================================================
DECLARE
  TYPE item_rec IS RECORD (
    product VARCHAR2(100),
    item_name VARCHAR2(100),
    unit VARCHAR2(20),
    conversion VARCHAR2(20)
  );
  TYPE item_table IS TABLE OF item_rec INDEX BY PLS_INTEGER;
  TYPE product_count_table IS TABLE OF NUMBER INDEX BY VARCHAR2(100);

  items item_table;
  product_counts product_count_table;
  v_last_product VARCHAR2(100);
  idx PLS_INTEGER := 1;
BEGIN
  -- Fetch and store the data in a collection
  FOR x IN (SELECT
              LD.LOOKUP_DET_NAME AS PRODUCT,
              IM.ITEM_NAME,
              IM.UNIT,
              IM.PACKING_SIZE AS CONVERSION
            FROM
              AB_ITEMS_MASTER IM
            JOIN
              AB_LOOKUP_DETAIL LD ON LD.DET_ID = IM.PRODUCT_CATEGORY_ID
            ORDER BY
              LD.LOOKUP_DET_NAME, IM.ITEM_NAME ASC) LOOP
    items(idx).product := x.PRODUCT;
    items(idx).item_name := x.ITEM_NAME;
    items(idx).unit := x.UNIT;
    items(idx).conversion := x.CONVERSION;
    idx := idx + 1;
    
    -- Count the occurrences of each product
    IF product_counts.EXISTS(x.PRODUCT) THEN
      product_counts(x.PRODUCT) := product_counts(x.PRODUCT) + 1;
    ELSE
      product_counts(x.PRODUCT) := 1;
    END IF;
  END LOOP;
  
  -- Start generating the HTML output
  htp.p('<!DOCTYPE html><html><head><title>Print Example</title>');
  htp.p('<style>
    @page {
      size: A4; /* Set the page size to A4 */
      margin: 10mm; /* Set page margins to reduce extra space */
    }
    body {
      margin: 0; /* Remove default margins */
      padding: 0;
      font-family: Arial, sans-serif;
    }
    .button {
      padding: 10px 20px;
      background-color: #4CAF50;
      color: white;
      border: none;
      cursor: pointer;
    }
    .button1 {
      font-size: 16px;
    }
    table {
      border-collapse: collapse;
      width: 100%;
      margin: 0; /* Remove margin around the table */
      padding: 0; /* Remove padding inside the table */
    }
    th, td {
      text-align: left; /* Align text to the left for better readability */
      padding: 3px; /* Reduce padding for tighter rows */
      font-size: 10px; /* Set font size for data to 10px */
      line-height: 1.1; /* Reduce line height to decrease row spacing */
    }
    th {
      border-bottom: 1px solid black; /* Simplify the row line by reducing the thickness */
      font-size: 10px; /* Set font size for headers to 10px */
      position: relative; /* Required for pseudo-elements */
    }
    th.conversion-header, td.conversion-data {
      text-align: right; /* Align header and data to the right */
    }
    th.unit-header, td.unit-column {
      text-align: right; /* Align UNIT header and data to the right */
    }
    td.product-cell {
      vertical-align: top; /* Align text to the top of the cell */
      padding-right: 10px; /* Adjust padding for PRODUCT column */
      border-right: none; /* Remove the right border */
      white-space: nowrap; /* Prevent text from wrapping */
    }
    td.item-name-column {
      padding-left: 5px; /* Adjust padding for ITEM NAME column */
      white-space: nowrap; /* Prevent text from wrapping */
      overflow: hidden; /* Hide overflowed content */
      text-overflow: ellipsis; /* Add ellipsis if text overflows */
    }
    td.unit-column {
      text-align: right; /* Align text to the right */
      padding-right: 5px; /* Adjust right padding */
    }
    .separator {
      border-top: 1px solid black; /* Simplify the separator line */
    }
    @media print {
      thead {display: table-header-group;}
      tfoot {display: table-footer-group;}
    }
    h2 {
      font-size: 20px; /* Increase font size */
      white-space: nowrap; /* Prevents line breaks */
      overflow: hidden; /* Hides overflowed content */
      text-overflow: ellipsis; /* Adds ellipsis if text overflows */
      margin: 0; /* Remove margin above and below h2 headings */
      padding: 0;
      text-align: center; /* Center-align text */
    }
    #div_print1 {
      margin: 0; /* Ensure no extra margin around the container */
      padding: 0;
    }
  </style>');
  htp.p('<script>
    function adjustColumnWidth() {
      var table = document.querySelector("table");
      var itemNameColumnIndex = 1; // Index for ITEM NAME column
      var maxWidth = 0;
      var rows = table.querySelectorAll("tbody tr");
      
      rows.forEach(function(row) {
        var itemNameCell = row.cells[itemNameColumnIndex];
        if (itemNameCell) {
          var cellWidth = itemNameCell.scrollWidth;
          if (cellWidth > maxWidth) {
            maxWidth = cellWidth;
          }
        }
      });
      
      var header = table.querySelector("thead th.item-name-column");
      if (header) {
        header.style.width = maxWidth + "px";
      }
      
      var dataCells = table.querySelectorAll("tbody td.item-name-column");
      dataCells.forEach(function(cell) {
        cell.style.width = maxWidth + "px";
      });
    }
    
    function printDiv(printpage) {
      adjustColumnWidth();
      var headstr = "<html><head><title></title><style>";
      headstr += "@page { size: A4; margin: 10mm; }";
      headstr += "body { margin: 0; padding: 0; font-family: Arial, sans-serif; }";
      headstr += ".button { padding: 10px 20px; background-color: #4CAF50; color: white; border: none; cursor: pointer; }";
      headstr += ".button1 { font-size: 16px; }";
      headstr += "table { border-collapse: collapse; width: 100%; margin: 0; padding: 0; }";
      headstr += "th, td { text-align: left; padding: 3px; font-size: 10px; line-height: 1.1; }";
      headstr += "th { border-bottom: 1px solid black; }";
      headstr += "th.conversion-header, td.conversion-data { text-align: right; }";
      headstr += "th.unit-header, td.unit-column { text-align: right; }";
      headstr += "td.product-cell { vertical-align: top; padding-right: 10px; border-right: none; white-space: nowrap; }";
      headstr += "td.item-name-column { padding-left: 5px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }";
      headstr += "td.unit-column { text-align: right; padding-right: 5px; }";
      headstr += ".separator { border-top: 1px solid black; }";
      headstr += "@media print { thead {display: table-header-group;} tfoot {display: table-footer-group;} }";
      headstr += "h2 { font-size: 20px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; margin: 0; padding: 0; text-align: center; }";
      headstr += "#div_print1 { margin: 0; padding: 0; }";
      headstr += "</style></head><body>";
      var footstr = "</body></html>";
      var newstr = document.getElementById(printpage).innerHTML;
      var oldstr = document.body.innerHTML;
      document.body.innerHTML = headstr + newstr + footstr;
      window.print();
      document.body.innerHTML = oldstr;
      return false;
    }
  </script></head><body>');

  htp.p('<button class="button button1 t-Icon t-Icon--right fa fa-print" id="print" type="button" onclick="printDiv(''div_print1'')">Print</button>');
  htp.p('<div id="div_print1" style="margin: 0; padding: 0;">');
  htp.p('<center><h2>AKBAR BROTHERS GROUP OF COMPANIES NEAR BC CHOWK</h2></center>');
  htp.p('<center><h2>Item Report</h2></center>');
  htp.p('<table>
    <thead>
      <tr>
        <th style="width: 10%;">Product</th>
        <th class="item-name-column">Item Name</th>
        <th class="unit-header" style="width: 15%;">Unit</th>
        <th class="conversion-header" style="width: 15%;">Conversion</th>
      </tr>
    </thead>
    <tbody>');

  -- Initialize variable for product grouping
  v_last_product := null;

  -- Iterate through the collection to generate the HTML table
  FOR i IN 1..items.COUNT LOOP
    -- Check if a new product group starts
    IF v_last_product IS NULL OR v_last_product != items(i).product THEN
      -- Insert a separator row if this is not the first product group
      IF v_last_product IS NOT NULL THEN
        htp.p('<tr><td class="separator" colspan="4"></td></tr>');
      END IF;
      
      -- Output PRODUCT cell with rowspan
      htp.p('<tr>');
      htp.p('<td class="product-cell" style="width: 10%;" rowspan="' || product_counts(items(i).product) || '">' || items(i).product || '</td>');
      
      -- Output ITEM NAME, UNIT, CONVERSION cells for the first row of the product group
      htp.p('<td class="item-name-column">' || items(i).item_name || '</td>'); 
      htp.p('<td class="unit-column">' || items(i).unit || '</td>'); 
      htp.p('<td class="conversion-data">' || items(i).conversion || '</td>'); 
      htp.p('</tr>');
      -- Update the last product tracker
      v_last_product := items(i).product;
    ELSE
      -- Output ITEM NAME, UNIT, CONVERSION cells for subsequent rows of the product group
      htp.p('<tr>');
      htp.p('<td class="item-name-column">' || items(i).item_name || '</td>'); 
      htp.p('<td class="unit-column">' || items(i).unit || '</td>'); 
      htp.p('<td class="conversion-data">' || items(i).conversion || '</td>'); 
      htp.p('</tr>');
    END IF;
  END LOOP;

  htp.p('</tbody></table></div>');
  htp.p('</body></html>');
END;
